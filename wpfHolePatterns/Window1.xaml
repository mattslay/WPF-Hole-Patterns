<Window x:Class="wpfHolePattern.Window1" Name="winBoltCircle"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:wpfHolePattern"    
    xmlns:sys="clr-namespace:System;assembly=mscorlib"    
    xmlns:GeoPatterns="clr-namespace:GeoPatterns"

    Title="WPF Hole Patterns" Height="700" Width="1024" Background="Gray">


    <Window.Resources>
        <local:FormattingConverter x:Key="formatter" />

        <!--Note 08/13/2008: A bug in VS20087 prevents this techique from working, to populate the HoleType
        ListView from the enum definition using XAML. I reported this buf on 8/11/08 to Microsoft Connect, and they
        replied to acknowledge the bug, and that they are looking in to it further.
        So, for now, the ItemsSource of the RadioButtons ListView must be set in the code-behind file.
        See the Window constructor.
        
        Here is a link the the bug reoprt incident.
        http://connect.microsoft.com/VisualStudio/feedback/ViewFeedback.aspx?FeedbackID=361509
        
        <ObjectDataProvider x:Key="HoleTypeList" MethodName="GetValues" ObjectType="{x:Type sys:Enum}" >
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:HolePattern+Hole+HoleTypes" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>-->


        <!--These resouces came from Friend and teacher John Fenton. All of these may no be used in this app
        but they are here in case.-->
        <SolidColorBrush x:Key="DisabledBackgroundBrush" Color="#EEE" />
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#DDD" />
        <SolidColorBrush x:Key="WindowBackgroundBrush"   Color="#FFF" />

        <SolidColorBrush x:Key="DisabledBorderBrush"     Color="#AAA" />
        <SolidColorBrush x:Key="LightBorderBrush"        Color="#AAA" />
        <SolidColorBrush x:Key="MouseOverBorderBrush"    Color="#FFE6780C" />
        <SolidColorBrush x:Key="SolidBorderBrush"        Color="#888" />
        <SolidColorBrush x:Key="VeryLightBorderBrush"    Color="#BBB" />
        <SolidColorBrush x:Key="ExtraLightBorderBrush"   Color="#CCC" />

        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="ForegroundBrush"         Color="#000" />

        <SolidColorBrush x:Key="GlyphBrush"              Color="#444" />
        <SolidColorBrush x:Key="LightColorBrush"         Color="#DDD" />
        <SolidColorBrush x:Key="SolidLightBrush"         Color="#EEE" />

        <!--change-highlight-color-when-an-item-in-a-listview-is-selected-->
        <!--http://imduff.wordpress.com/2008/03/01/change-highlight-color-when-an-item-in-a-listview-is-selected/-->
        <!--<SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="White"/>-->
        <!--<SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="LightGray"/>-->

        <Style x:Key="RadioButtonList" TargetType="{x:Type ListBox}">
            <Setter Property="BorderBrush" Value="{x:Null}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ListBoxItem}" >
                        <Setter Property="Margin" Value="2" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                    <Border Background="Transparent">
                                        <RadioButton Focusable="False" IsHitTestVisible="False" IsChecked="{TemplateBinding IsSelected}">
                                            <ContentPresenter />
                                        </RadioButton>
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
        </Style>
        <!--x:Key="RadioButtonList" - This style is intended for use on the HoleType enum choices-->

        <Style x:Key="cdsSpinnerStyle" TargetType="TextBox">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="MinWidth" Value="75"/>
            <Setter Property="MinHeight" Value="26"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <DockPanel Name="SpinnerButtons" >
                            <StackPanel DockPanel.Dock="Right">
                                <Button Name="PART_SpinnerUp" Padding="0,-2,0,0" Width="20" Height="13">
                                    <Path Fill="{TemplateBinding Foreground}" Data="M -0.5 3 L 5.5 3 L 2.5 0 Z"/>
                                </Button>
                                <Button Name="PART_SpinnerDown" Padding="0,-3,0,0" Width="20" Height="13">
                                    <Path Fill="{TemplateBinding Foreground}" Data="M -0.5 3 L 5.5 3 L 2.5 6 Z"/>
                                </Button>
                            </StackPanel>
                            <Border Name="Border"
                                  CornerRadius="0" 
                                  Padding="2"
                                  Background="{StaticResource WindowBackgroundBrush}"
                                  BorderBrush="{StaticResource SolidBorderBrush}"
                                  BorderThickness="1" >
                                <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                            </Border>
                        </DockPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBackgroundBrush}"/>
                                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--x:Key="cdsSpinnerStyle" - This style is intended for use on the HoleType enum choices-->
        <Style TargetType="Ellipse" x:Key="EllipseStyle">
            <Setter Property="Stroke" Value="Black"/>
            <Setter Property="StrokeThickness" Value="1" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true" >
                    <Setter Property="Fill" Value="Yellow"/>
                    <Setter Property="StrokeThickness" Value="5" />
                    <Setter Property="Stroke" Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="lvRowHighlighter" TargetType="{x:Type ListViewItem}"  >
            <!--<Setter Property="Height" Value="35" />-->
            <!--<Setter Property="Background" Value="#5EF4E057" />-->
            <!--<Setter Property="Foreground" Value="#FF4B94EC"/>-->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Foreground" Value="DarkBlue" />
                    <Setter Property="Background">
                        <Setter.Value>
                            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                <GradientStop Color="#FFFFC704" Offset="0.986"/>
                                <GradientStop Color="#FFF4E057" Offset="0.5"/>
                                <GradientStop Color="#FFF4E057" Offset="0.51"/>
                            </LinearGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!-- x:Key="lvRowHighlighter" - A IsMouseOver style for the HolePatterns list view  -->

        <DataTemplate DataType="{x:Type GeoPatterns:CircularHolePattern}">
            <!--Bolt Cir Dia.-->
            <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                <TextBlock Text="Bolt Cir Dia. " Width="75" />
                <TextBox Name="txtBoltCirDia1" Text="{Binding Path=BoltCirDia, UpdateSourceTrigger=PropertyChanged}"
                         PreviewGotKeyboardFocus="TextBox_PreviewGotKeyboardFocus" Height="25" Width="55"
                         PreviewKeyDown="TextBox_PreviewKeyDown" />
            </StackPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type GeoPatterns:SingleLineHolePattern}">
            <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                <TextBlock Text="Spacing " Width="75" />
                <TextBox Name="txtSpacing" Text="{Binding Path=Spacing, UpdateSourceTrigger=PropertyChanged}"
                         PreviewGotKeyboardFocus="TextBox_PreviewGotKeyboardFocus" Height="25" Width="55"
                         PreviewKeyDown="TextBox_PreviewKeyDown" />
            </StackPanel>
        </DataTemplate>

    </Window.Resources>

    <!--Main layout grid-->
    <Grid Margin="5,5,5,5" DataContext="{Binding ElementName=winBoltCircle}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250" />
            <ColumnDefinition Width="250" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition Height="* "/>
        </Grid.RowDefinitions>

        <!--Left Column - Present the list of HolePatterns in the HolePatterns collection-->
        <!--<DockPanel >-->
            <Border Grid.Row="1" Grid.Column="0" Grid.RowSpan="2" BorderBrush="Black" BorderThickness="1" CornerRadius="4" Padding="10"
                Margin="5,0,5,5" Background="White"   >
                <DockPanel >
                    <!--<StackPanel x:Name="HolePatternsStackPanel" DockPanel.Dock="Top">-->
                    <DockPanel x:Name="HolePatternsHeaderDockPanel" DockPanel.Dock="Top" LastChildFill="False" Margin="0,0,0,5">
                        <TextBlock Text="Hole Patterns" DockPanel.Dock="Left" FontSize="12" VerticalAlignment="Center"/>
                        <Button Name="btnHolePatternDelete" DockPanel.Dock="Right" Click="btnHolePatternDelete_Click" Margin="5,0,0,0">Delete</Button>
                        <Button Name="btnAddLinePattern" DockPanel.Dock="Right" Click="btnAddLinePattern_Click">Line</Button>
                        <Button Name="btnAddCircularPattern" DockPanel.Dock="Right" Click="btnAddCircularPattern_Click">Circular</Button>
                    </DockPanel>

                    <ListView x:Name="lvHolePatterns" ItemsSource="{Binding Path=HolePatterns}"
                                                  SelectedItem="{Binding Path=ActivePattern}"
                                                  IsSynchronizedWithCurrentItem="True"
                                                  HorizontalContentAlignment="Stretch"
                                                  ScrollViewer.VerticalScrollBarVisibility="Visible"
                                                  Background="Gray">
                        <ListView.ItemContainerStyle>
                            <Style BasedOn="{StaticResource lvRowHighlighter}" TargetType="{x:Type ListViewItem}">
                                <!--<Setter Property="Height" Value="50" />-->
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <Border Margin="0,3,5,3" BorderThickness="1" BorderBrush="SlateGray" CornerRadius="4" RenderTransformOrigin="0.5,0.5">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#FF000000" Offset=" 1"/>
                                            <GradientStop Color="#FF396DBE" Offset="0"/>
                                        </LinearGradientBrush>
                                    </Border.Background>
                                    <!--<Grid Margin="3">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>-->
                                    <StackPanel Orientation="Vertical">
                                        <TextBlock FontWeight="Bold" Text="{Binding Path=PatternName}" Foreground="WHITE" VerticalAlignment="Center"  Margin="5,5,0,5"/>
                                        <StackPanel Orientation="Horizontal" Margin="5,0,0,5">
                                            <!--<TextBlock Text="{Binding Path=BoltCirDia}" Margin="5,0,0,0" Foreground="WHITE" VerticalAlignment="Center"/>-->
                                            <!--<TextBlock Text=" Dia X " Margin="3,0,0,0" Foreground="WHITE" VerticalAlignment="Center"/>-->
                                            <TextBlock Text="{Binding Path=HoleCount}" Margin="15,0,0,0" Foreground="WHITE" VerticalAlignment="Center"/>
                                            <TextBlock Text=" Holes" Margin="3,0,0,0" Foreground="WHITE" VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </StackPanel>
                                    <!--</Grid>-->
                                </Border>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>

                </DockPanel>
            </Border>
        <!--</DockPanel>-->
        <!-- Middle Column - Hole Pattern Data Input region -->
        <Border Grid.Row="1" Grid.Column="1" BorderBrush="Black" BorderThickness="1" CornerRadius="4" DockPanel.Dock="Top"
                Padding="10" Margin="5,0,5,5" Grid.RowSpan="2" Background="White">
            <StackPanel x:Name="HolePatternStackPanel" DataContext="{Binding Path=ActivePattern}">
                <TextBlock Text="Pattern Details" FontSize="12" Margin="0,5,0,0" Height="{Binding Path=ActualHeight, ElementName=HolePatternsHeaderDockPanel}"/>
                <Line X1="0" X2="{Binding Path=ActualWidth, ElementName=HolePatternStackPanel}" Stroke="Gray" StrokeThickness="1"></Line>
                <!--Pattern Name-->
                <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                    <TextBlock Text="Pattern Name " Width="75" />
                    <TextBox Grid.Column="1" Name="txtPatternName" Text="{Binding Path=PatternName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                             Height="25" Width="125"/>
                </StackPanel>
                <!--Specialized content presentation here, based on object type of selected item in the listview-->
                <ContentControl Content="{Binding Path=ActivePattern, ElementName=winBoltCircle}" ></ContentControl>
                <!--No. of Holes:-->
                <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                    <TextBlock Text="No. of Holes: " Width="75" />
                    <local:cdsSpinner x:Name="txtHoleCount1"  Height="25" Width="75"
                                      Text="{Binding Path=HoleCount, UpdateSourceTrigger=PropertyChanged}"
                                      Style="{StaticResource cdsSpinnerStyle}"
                                      PreviewGotKeyboardFocus="TextBox_PreviewGotKeyboardFocus" />
                </StackPanel>
                <!--Start Angle:-->
                <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                    <TextBlock Text="Start Angle: " Width="75" />
                    <local:cdsSpinner x:Name="txtStartAngle1"  Height="25" Width="75"
                                      Text="{Binding Path=StartAngle, UpdateSourceTrigger=PropertyChanged}"
                                      Style="{StaticResource cdsSpinnerStyle}"
                                      PreviewGotKeyboardFocus="TextBox_PreviewGotKeyboardFocus" />
                </StackPanel>
                <!--StartAngle-->
                <Slider Name="slider1" Margin="0,5,0,0"
                        Value="{Binding Path=StartAngle}"
                        Minimum="-180" Maximum="180" LargeChange="5" Ticks="0,45,90" TickPlacement="BottomRight" SmallChange="1" Height="22"  Width="75">
                </Slider>
                <!--Start X, StartY-->
                <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                    <TextBlock Text="Start X: "/>
                    <TextBox Text="{Binding Path=StartX, UpdateSourceTrigger=PropertyChanged}"
                         PreviewGotKeyboardFocus="TextBox_PreviewGotKeyboardFocus" Height="25" Width="55"
                         PreviewKeyDown="TextBox_PreviewKeyDown" />
                    <TextBlock Text="Start Y: " Margin="10,0,0,0" />
                    <TextBox Text="{Binding Path=StartY, UpdateSourceTrigger=PropertyChanged}"
                         PreviewGotKeyboardFocus="TextBox_PreviewGotKeyboardFocus" Height="25" Width="55"
                         PreviewKeyDown="TextBox_PreviewKeyDown" />
                </StackPanel>
                <!--Hole Size-->
                <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                    <TextBlock Text="Hole Size" VerticalAlignment="Center" Width="75" />
                    <Button Name="btnHoleSizeDecrease1" Click="btnHoleSizeDecrease_Click" Width="25">-</Button>
                    <Button Name="btnHoleSizeIncrease1" Click="btnHoleSizeIncrease_Click" Margin="5,0,0,0" Width="25">+</Button>
                </StackPanel>
                <!--Hole Type:-->
                <StackPanel Orientation="Horizontal" Margin="0,5,0,0">
                    <TextBlock Text="Hole Type:" Width="75"></TextBlock>
                    <ListBox Name="HoleType1" Style="{StaticResource RadioButtonList}" 
                             SelectedValue="{Binding Path=HoleType, Mode=TwoWay}" />
                </StackPanel>
                <!--Coordinate Grid  -->
                <DockPanel LastChildFill="True" Margin="0,10,0,0">
                    <!--SelectionChanged="CoordinateGrid1_SelectionChanged"-->
                    <ListView x:Name="CoordinateGrid1" DockPanel.Dock="Top"
                                                       ItemsSource="{Binding Path=HoleList}" 
                                                       SelectedItem="{Binding Path=CurrentHole}"
                                                       MouseDoubleClick="CoordinateGrid_MouseDoubleClick">
                                                       <!--IsSynchronizedWithCurrentItem="True">  WILL MESS IT UP IF I USE THIS -->
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="No." DisplayMemberBinding="{Binding Path=HoleNumber}" />
                                <GridViewColumn Header="X Coord" Width="60">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock 
                            Text="{Binding AbsX, Converter={StaticResource formatter}, ConverterParameter='\{0:f4\}'}" HorizontalAlignment="Right"  />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Y Coord" Width="60" >
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock 
                            Text="{Binding AbsY, Converter={StaticResource formatter}, ConverterParameter='\{0:f4\}'}" HorizontalAlignment="Right"  />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Angle"  Width="60">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock 
                            Text="{Binding Angle, Converter={StaticResource formatter}, ConverterParameter='\{0:f2\}'}" HorizontalAlignment="Right"  />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </DockPanel>

            </StackPanel>
        </Border>


        <!-- Right Column - Graph -->
        <DockPanel Name="dpContainer" LastChildFill="True" Grid.Row="1" Grid.Column="2">
            <Border BorderBrush="Black" BorderThickness="1" CornerRadius="4" DockPanel.Dock="Top"
                Padding="10" Height="50" VerticalAlignment="Top" Margin="5,0,5,0" Background="White">
                <StackPanel Orientation="Horizontal" >
                    <Button Name="btnDraw" Click="btnDraw_Click">ReDraw</Button>
                    <StackPanel Orientation="Horizontal" Margin="10,0,0,0">
                        <!--<TextBlock Text="Hole Size" VerticalAlignment="Center" Margin="10,0,10,0"/>
                        <Button Name="btnHoleSizeDecrease" Click="btnHoleSizeDecrease_Click" Margin="5,0,0,0" Width="25">-</Button>
                        <Button Name="btnHoleSizeIncrease" Click="btnHoleSizeIncrease_Click" Margin="5,0,0,0" Width="25">+</Button>-->
                        <CheckBox Content="Labels" IsChecked="{Binding Path=ShowLabels, ElementName=winBoltCircle}" Click="CheckBox_Click" />
                    </StackPanel>
                    <!--ZoomSlider-->
                    <Slider Name="ZoomSlider" Margin="10,5,0,0"
                        Value="{Binding Path=ZoomScale, ElementName=winBoltCircle}"
                        Maximum="50" Minimum=".1" LargeChange=".1" Ticks="0,1,5" TickPlacement="BottomRight" SmallChange=".1" Height="22"  Width="75">
                    </Slider>

                    <Button Name="btnPrint" Width="75" Click="btnPrint_Click" Margin="115,0,0,0">Print</Button>
                </StackPanel>
            </Border>
            <Border BorderBrush="Black" BorderThickness="1" CornerRadius="4"
                Padding="10" Margin="5" Background="White">
                <DockPanel>
                    <TextBlock Text="Double-Click a row in the grid to toggle hole visibility." DockPanel.Dock="Top"/>
                    <Canvas Name="canvas1" Background="#7920619E" />
                </DockPanel>
            </Border>
        </DockPanel>

    </Grid>
</Window>
